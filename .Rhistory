shiny::runApp()
library(LBSPR)
args(plotSim)
shiny::runApp()
runApp()
runApp()
runApp()
runMod
plotSim(runMod)
LB_obj <- runMod
type=c("all", "len.freq", "growth", "maturity.select", "yield.curve")
lf.type="catch"
growth.type="LAA"
perRec <- FALSE
incSPR <- TRUE
Cols <- NULL
size.axtex=12
size.title=14
size.spr=4
LMids <- LB_obj@LMids
LMids
pLCatch <- LB_obj@pLCatch # predicted size comp of catch
pLPop <- LB_obj@pLPop # predicted size comp of population
pLCatch
pLPop
if (length(pLPop) < 1) stop("No simulated population data")
PopF <- pLPop[,"PopF"]
PopUF <- pLPop[,"PopUF"]
PopSizeDat <- data.frame(pLPop)
PopSizeDat
perRec
if (!perRec) {
relativePop <- PopF / (PopF[1]/PopUF[1]) * (LB_obj@RelRec/LB_obj@R0)
PopSizeDat[,"PopF"] <- relativePop
ind <- which(PopSizeDat[,"VulnUF"] > 0)[1]
relativeCatch <- pLCatch / (pLCatch[ind]/PopSizeDat[,"VulnUF"][ind]) * (LB_obj@RelRec/LB_obj@R0)
pLCatch <- relativeCatch
}
pLCatch
if (lf.type == "catch") {
ind <- match(LMids, PopSizeDat[,1])
Dat <- data.frame(LMids=LMids, VulnUF=PopSizeDat[ind, "VulnUF"], pLCatch=pLCatch)
longDat <- gather(Dat, "PopType", "PLength", 2:ncol(Dat))
Title <- "Catch"
Leg <- c("Fished", "Unfished")
}
if (length(LB_obj@L_units) > 0) {
XLab <- paste0("Length (", LB_obj@L_units, ")")
} else XLab <- "Length"
library(tidyr)
library(ggplot2)
if (lf.type == "catch") {
ind <- match(LMids, PopSizeDat[,1])
Dat <- data.frame(LMids=LMids, VulnUF=PopSizeDat[ind, "VulnUF"], pLCatch=pLCatch)
longDat <- gather(Dat, "PopType", "PLength", 2:ncol(Dat))
Title <- "Catch"
Leg <- c("Fished", "Unfished")
}
if (lf.type == "pop") {
longDat <- gather(PopSizeDat, "PopType", "PLength", 2:ncol(PopSizeDat))
longDat <- dplyr::filter(longDat, PopType == "PopUF" | PopType == "PopF")
Title <- "Population"
Leg <- c("Fished", "Unfished")
}
if (length(LB_obj@L_units) > 0) {
XLab <- paste0("Length (", LB_obj@L_units, ")")
}
XLab
PopType <- PLength <- NULL # hack to get past CRAN
LF.Plot <- ggplot(longDat, aes(x=LMids, y=PLength, fill=PopType)) +
geom_bar(stat="identity", position = "identity") +
xlab(XLab) +
ylab("Relative Number") +
theme_bw() +
theme(axis.text=element_text(size=size.axtex),
axis.title=element_text(size=size.title,face="bold"), legend.position="top")
LF.Plot
longDat
Dat
ind
PopSizeDat
LMids
PopSizeDat[,1]
LMids
match(LMids, PopSizeDat[,1])
ind <- match(round(LMids,2), round(PopSizeDat[,1],2))
ind
Dat <- data.frame(LMids=LMids, VulnUF=PopSizeDat[ind, "VulnUF"], pLCatch=pLCatch)
longDat <- gather(Dat, "PopType", "PLength", 2:ncol(Dat))
Title <- "Catch"
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
args(plotSim)
shiny::runApp()
runApp()
